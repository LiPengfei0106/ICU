apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    defaultConfig {
        applicationId "cn.cleartv.icu"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 12
        versionName "v1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        manifestPlaceholders = [
                appName: "ICU",
                appIcon: "@mipmap/ic_launcher"
        ]
    }

    signingConfigs {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        sign {
            storeFile file(properties.getProperty('sign.storeFile'))
            storePassword properties.getProperty('sign.storePassword')
            keyAlias properties.getProperty('sign.keyAlias')
            keyPassword properties.getProperty('sign.keyPassword')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    flavorDimensions "mode"
    productFlavors {
        host {
            dimension "mode"
            applicationId "cn.cleartv.icu.host"
            manifestPlaceholders = [
                    appName: "护士站主机",
                    appIcon: "@mipmap/ic_launcher"
            ]
        }
        bed {
            dimension "mode"
            applicationId "cn.cleartv.icu.bed"
            manifestPlaceholders = [
                    appName: "病床分机",
                    appIcon: "@mipmap/ic_launcher"
            ]
        }
        guest {
            dimension "mode"
            applicationId "cn.cleartv.icu.guest"
            manifestPlaceholders = [
                    appName: "探视分机",
                    appIcon: "@mipmap/ic_launcher"
            ]
        }
//        door { dimension "mode" }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // abc_渠道名_版本名.apk  还可以拼接其他app内容：variant.versionCode  variant.buildType.name
            outputFileName = "${applicationId}_${variant.name}_${variant.versionName}_${new Date().format("yyMMddHHmm")}.apk"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Room components
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // 数据库Debug
    debugImplementation "com.amitshekhar.android:debug-db:$debug_db"

    // recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$brvah"

    implementation "com.jakewharton.timber:timber:$timber"

    // ktx
    implementation "androidx.activity:activity-ktx:$activity_ktx"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"

    implementation project(path: ':lib_voip')
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"

    // fastjson对kotlin支持不好；Gson还行，但不支持空安全检查
//    implementation "com.alibaba:fastjson:$fastjson"

    // A modern JSON library for Kotlin and Java.
//    implementation "com.squareup.moshi:moshi:1.9.3"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"

    implementation "androidx.multidex:multidex:$multidex_version"

    implementation "androidx.preference:preference-ktx:$preference_version"

    implementation "androidx.paging:paging-runtime-ktx:$paging_version" // For Kotlin use paging-runtime-ktx


    implementation 'com.google.android.material:material:1.2.1'

}
